{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./InteractiveTranscript.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InteractiveTranscript=_ref=>{let{script,wordTimings,audioRef}=_ref;const[currentWordIndex,setCurrentWordIndex]=useState(-1);const[isPlaying,setIsPlaying]=useState(false);const transcriptRef=useRef(null);const wordsRef=useRef([]);// Split script into words and create mock timings if none provided\nconst words=script.split(/\\s+/).filter(word=>word.length>0);// Generate mock word timings if not provided (for demo purposes)\nconst mockWordTimings=words.map((word,index)=>({word:word.replace(/[^\\w]/g,''),// Remove punctuation for matching\nstart:index*0.5,// 0.5 seconds per word\nend:(index+1)*0.5}));const effectiveTimings=wordTimings.length>0?wordTimings:mockWordTimings;useEffect(()=>{const audio=audioRef.current;if(!audio)return;const handleTimeUpdate=()=>{const currentTime=audio.currentTime;// Find the current word based on timing\nconst wordIndex=effectiveTimings.findIndex(timing=>currentTime>=timing.start&&currentTime<=timing.end);if(wordIndex!==-1&&wordIndex!==currentWordIndex){setCurrentWordIndex(wordIndex);// Auto-scroll to keep highlighted word visible\nconst wordElement=wordsRef.current[wordIndex];if(wordElement&&transcriptRef.current){const transcriptRect=transcriptRef.current.getBoundingClientRect();const wordRect=wordElement.getBoundingClientRect();// Check if word is outside visible area\nif(wordRect.top<transcriptRect.top||wordRect.bottom>transcriptRect.bottom){wordElement.scrollIntoView({behavior:'smooth',block:'center'});}}}};const handlePlay=()=>setIsPlaying(true);const handlePause=()=>setIsPlaying(false);const handleEnded=()=>{setIsPlaying(false);setCurrentWordIndex(-1);};audio.addEventListener('timeupdate',handleTimeUpdate);audio.addEventListener('play',handlePlay);audio.addEventListener('pause',handlePause);audio.addEventListener('ended',handleEnded);return()=>{audio.removeEventListener('timeupdate',handleTimeUpdate);audio.removeEventListener('play',handlePlay);audio.removeEventListener('pause',handlePause);audio.removeEventListener('ended',handleEnded);};},[audioRef,currentWordIndex,effectiveTimings]);const handleWordClick=wordIndex=>{const audio=audioRef.current;if(!audio)return;const timing=effectiveTimings[wordIndex];if(timing){audio.currentTime=timing.start;if(!isPlaying){audio.play();}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"transcript-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCDD Interactive Transcript\"}),/*#__PURE__*/_jsx(\"div\",{className:\"transcript-instructions\",children:\"Click any word to jump to that point in the audio\"}),/*#__PURE__*/_jsx(\"div\",{ref:transcriptRef,className:\"transcript-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"transcript-text\",children:words.map((word,index)=>{var _effectiveTimings$ind;return/*#__PURE__*/_jsx(\"span\",{ref:el=>wordsRef.current[index]=el,className:\"transcript-word \".concat(index===currentWordIndex?'highlighted':'',\" \").concat(isPlaying?'playable':''),onClick:()=>handleWordClick(index),title:\"Jump to \".concat((_effectiveTimings$ind=effectiveTimings[index])===null||_effectiveTimings$ind===void 0?void 0:_effectiveTimings$ind.start.toFixed(1),\"s\"),children:word},index);})})}),isPlaying&&/*#__PURE__*/_jsx(\"div\",{className:\"playback-indicator\",children:\"\\uD83C\\uDFB5 Playing - words will highlight as they're spoken\"})]});};export default InteractiveTranscript;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","InteractiveTranscript","_ref","script","wordTimings","audioRef","currentWordIndex","setCurrentWordIndex","isPlaying","setIsPlaying","transcriptRef","wordsRef","words","split","filter","word","length","mockWordTimings","map","index","replace","start","end","effectiveTimings","audio","current","handleTimeUpdate","currentTime","wordIndex","findIndex","timing","wordElement","transcriptRect","getBoundingClientRect","wordRect","top","bottom","scrollIntoView","behavior","block","handlePlay","handlePause","handleEnded","addEventListener","removeEventListener","handleWordClick","play","className","children","ref","_effectiveTimings$ind","el","concat","onClick","title","toFixed"],"sources":["/Users/tonynarvaez/projects/myownnews-agent/myownnews/curio-news-ui/src/components/InteractiveTranscript.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, RefObject } from 'react';\nimport './InteractiveTranscript.css';\n\ninterface WordTiming {\n  word: string;\n  start: number;\n  end: number;\n}\n\ninterface InteractiveTranscriptProps {\n  script: string;\n  wordTimings: WordTiming[];\n  audioRef: RefObject<HTMLAudioElement>;\n}\n\nconst InteractiveTranscript: React.FC<InteractiveTranscriptProps> = ({\n  script,\n  wordTimings,\n  audioRef\n}) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState<number>(-1);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const transcriptRef = useRef<HTMLDivElement>(null);\n  const wordsRef = useRef<(HTMLSpanElement | null)[]>([]);\n\n  // Split script into words and create mock timings if none provided\n  const words = script.split(/\\s+/).filter(word => word.length > 0);\n  \n  // Generate mock word timings if not provided (for demo purposes)\n  const mockWordTimings: WordTiming[] = words.map((word, index) => ({\n    word: word.replace(/[^\\w]/g, ''), // Remove punctuation for matching\n    start: index * 0.5, // 0.5 seconds per word\n    end: (index + 1) * 0.5\n  }));\n\n  const effectiveTimings = wordTimings.length > 0 ? wordTimings : mockWordTimings;\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    const handleTimeUpdate = () => {\n      const currentTime = audio.currentTime;\n      \n      // Find the current word based on timing\n      const wordIndex = effectiveTimings.findIndex(timing => \n        currentTime >= timing.start && currentTime <= timing.end\n      );\n      \n      if (wordIndex !== -1 && wordIndex !== currentWordIndex) {\n        setCurrentWordIndex(wordIndex);\n        \n        // Auto-scroll to keep highlighted word visible\n        const wordElement = wordsRef.current[wordIndex];\n        if (wordElement && transcriptRef.current) {\n          const transcriptRect = transcriptRef.current.getBoundingClientRect();\n          const wordRect = wordElement.getBoundingClientRect();\n          \n          // Check if word is outside visible area\n          if (wordRect.top < transcriptRect.top || wordRect.bottom > transcriptRect.bottom) {\n            wordElement.scrollIntoView({\n              behavior: 'smooth',\n              block: 'center'\n            });\n          }\n        }\n      }\n    };\n\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n    const handleEnded = () => {\n      setIsPlaying(false);\n      setCurrentWordIndex(-1);\n    };\n\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('ended', handleEnded);\n\n    return () => {\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('play', handlePlay);\n      audio.removeEventListener('pause', handlePause);\n      audio.removeEventListener('ended', handleEnded);\n    };\n  }, [audioRef, currentWordIndex, effectiveTimings]);\n\n  const handleWordClick = (wordIndex: number) => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    const timing = effectiveTimings[wordIndex];\n    if (timing) {\n      audio.currentTime = timing.start;\n      if (!isPlaying) {\n        audio.play();\n      }\n    }\n  };\n\n  return (\n    <div className=\"transcript-section\">\n      <h2>üìù Interactive Transcript</h2>\n      <div className=\"transcript-instructions\">\n        Click any word to jump to that point in the audio\n      </div>\n      \n      <div \n        ref={transcriptRef}\n        className=\"transcript-container\"\n      >\n        <div className=\"transcript-text\">\n          {words.map((word, index) => (\n            <span\n              key={index}\n              ref={el => wordsRef.current[index] = el}\n              className={`transcript-word ${\n                index === currentWordIndex ? 'highlighted' : ''\n              } ${isPlaying ? 'playable' : ''}`}\n              onClick={() => handleWordClick(index)}\n              title={`Jump to ${effectiveTimings[index]?.start.toFixed(1)}s`}\n            >\n              {word}\n            </span>\n          ))}\n        </div>\n      </div>\n      \n      {isPlaying && (\n        <div className=\"playback-indicator\">\n          üéµ Playing - words will highlight as they're spoken\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InteractiveTranscript;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}